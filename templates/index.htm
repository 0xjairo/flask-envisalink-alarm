 <html>
   <head>
<!-- Latest compiled and minified CSS -->
   <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
   </head>
   <body>
   <div class="container">
         <h1>Alarm Server</h1>
         <div id="event"></div>
         <div class="row">
             <div class="panel panel-default">
                 <div id="info" class="panel-body"></div>
             </div>
         </div>
         <div class="row">
             <div class="panel panel-default">
                 <div class="panel-heading"><h3 class="panel-title">Partitions</h3></div>
                 <div class="panel-body">
                     <div id="partitions"></div>
                     <br>
                     <div id="zones"></div>
                 </div>
             </div>
         </div>
     </div>
     <script type="text/javascript">

     var eventOutputContainer = document.getElementById("event");
     var partitionContainer = document.getElementById("partitions");
     var zonesContainer = document.getElementById("zones");
     var infoContainer = document.getElementById("info");
     var evtSrc = new EventSource("/subscribe");

     evtSrc.onmessage = function(e) {
         //console.log(e.data);
         var alarmstate = JSON.parse(e.data);
         // partitions
         var partitions = alarmstate.partition;
         partitionContainer.innerHTML = "";
         for(var partNum in partitions){
             if(!partitions.hasOwnProperty(partNum)){ continue; }

             var name = partitions[partNum].name;
             partitionContainer.innerHTML += "<h4>" + name + "</h4>";

             var status = partitions[partNum].status;
             for(var st in status){
                 if(!status.hasOwnProperty(st)){ continue; }
                 if(status[st] == true){
                     if(st == "trouble"){ label='danger'; } else { label='info'; }
                     partitionContainer.innerHTML += '<span class="label label-' + label +'">' + st + '</span>';
                     partitionContainer.innerHTML += '\n';
                 }
             }
         }

         var zones = alarmstate.zone;
         // clear zones
         zonesContainer.innerHTML = "";
         for(var zone in zones){
             if(!zones.hasOwnProperty(zone)){ continue; }

             var name = zones[zone].name
             zonesContainer.innerHTML += "<div>";
             zonesContainer.innerHTML += "<p>" + zone + ": " + name + "</p>";

             var lastevents = zones[zone].lastevents;
             try{
                 if(lastevents.length > 0){
                     zonesContainer.innerHTML += "<p>" + st + ": ";
                     zonesContainer.innerHTML += lastevents[lastevents.length-1].message + "</p>";
                 }
             }catch(err){}

             var status = zones[zone].status;
             for(var st in status){
                 if(!status.hasOwnProperty(st)){ continue; }
                 if(status[st] == true){ label='warning'; }
                 else{ label='default'; }
                 zonesContainer.innerHTML += '<span class="label label-'+label+'">' + st;
                 zonesContainer.innerHTML += '\n';
             }
             zonesContainer.innerHTML += "</div>";
         }
         infoContainer.innerHTML = "";
         var version = alarmstate.version;
         infoContainer.innerHTML += "Version:" + version;
         //console.log(alarmstate.zone)
         //eventOutputContainer.innerHTML = e.data;
     };

     </script>
   </body>
 </html>
